version: 2.1
orbs:
  node: circleci/node@5.0.1
  docker: circleci/docker@2.1.4
  heroku: circleci/heroku@2.0.0
  snyk: snyk/snyk@1.5.0

jobs:
  build:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: |
          echo Installing dependencies...”
          npm install
  test:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: |
          echo “Running tests...”
          npm run test 
  
  build-and-push:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: |
            echo "Building Docker image"
            docker build -t joshuaemmanuel7/education-space:<<pipeline.git.tag>> .
      - run:
          name: Log in to Docker Hub
          command: |
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - run:
          name: Push Docker Image to Docker Hub
          command: |
             docker push joshuaemmanuel7/education-space:<<pipeline.git.tag>>
  deploy:
    docker:
      - image: cimg/node:16.10
    steps:
      - setup_remote_docker
      - heroku/install
      - checkout
      - run:
          name: Heroku Container Push
          command: |
              heroku container:login
              heroku stack:set container -a jepster
              heroku container:push web -a jepster
              heroku container:release web -a jepster
  scan:
    docker:
      - image: cimg/node:16.10
    environment:
      IMAGE_NAME: joshuaemmanuel7/education-space
    steps:
      - checkout
      - setup_remote_docker
      - docker/check
      - run: docker build -t $IMAGE_NAME .
      - snyk/scan: 
          docker-image-name: $IMAGE_NAME

# workflows:
#   simple_workflow:
#     jobs:
#       - build:
#         filters:
#           branches:
#             only: main
#       - test:
#           requires:
#             - build
#           filters: 
#             branches:
#               only: main
#       - build-and-push:
#           filters:
#             tags:
#               only: /^v.*/  
#             branches: 
#               ignore: /.*/
#       - deploy:
#           requires:
#             - build-and-push
#           filters:
#             tags:
#               only: /^v.*/
#             branches: 
#               ignore: /.*/
workflows:
  simple_workflow:
    jobs:
      - build
      - scan:
          requires:
            - build
      - test:
          requires: 
            - scan